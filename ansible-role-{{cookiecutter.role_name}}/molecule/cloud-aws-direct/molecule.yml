---
dependency:
  name: {{ cookiecutter.dependency_name }}
  options:
    role-file: requirements.yml
driver:
  name: ec2
lint: |
  yamllint .
  ansible-lint --exclude meta .git
platforms:

{%- if cookiecutter.linux_tests == "true" %}
  - name: test-aws-centos8-{{ cookiecutter.role_name }}
    image: {{ cookiecutter.image_centos8 }}
    platform: centos8
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_linux == "true" %}
    volume_size: {{ cookiecutter.volume_size_linux }}
{% endif %}
    region: {{ cookiecutter.aws_region }}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    spot_price: {{ cookiecutter.spot_price }}
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: centos
    groups:
      - rhel_family

  - name: test-aws-centos7-{{ cookiecutter.role_name }}
    image: {{ cookiecutter.image_centos7 }}
    platform: centos7
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_linux == "true" %}
    volume_size: {{ cookiecutter.volume_size_linux }}
{% endif %}
    region: {{ cookiecutter.aws_region }}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    spot_price: {{ cookiecutter.spot_price }}
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: centos
    groups:
      - rhel_family

#  - name: test-aws-centos6-{{ cookiecutter.role_name }}
#    image: {{ cookiecutter.image_centos6 }}
#    platform: centos6
#    instance_type: m4.large
#{% if cookiecutter.customize_vol_size_linux == "true" %}
#    volume_size: {{ cookiecutter.volume_size_linux }}
#{% endif %}
#    region: {{ cookiecutter.aws_region }}
#    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
#    assign_public_ip: false
#    spot_price: {{ cookiecutter.spot_price }}
#    security_group_name:
#      - default
#    wait_timeout: 1800
#    ssh_user: centos
#    groups:
#     - rhel_family

  - name: test-aws-ubuntu16-{{ cookiecutter.role_name }}
    image: {{ cookiecutter.image_ubuntu16 }}
    platform: ubuntu16
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_linux == "true" %}
    volume_size: {{ cookiecutter.volume_size_linux }}
{% endif %}
    region: {{ cookiecutter.aws_region }}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    security_group_name:
      - default
    spot_price: {{ cookiecutter.spot_price }}
    wait_timeout: 1800
    ssh_user: ubuntu
    groups:
      - debian_family

  - name: test-aws-ubuntu18-{{ cookiecutter.role_name }}
    image: {{ cookiecutter.image_ubuntu18 }}
    platform: ubuntu18
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_linux == "true" %}
    volume_size: {{ cookiecutter.volume_size_linux }}
{% endif %}
    region: {{ cookiecutter.aws_region }}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    security_group_name:
      - default
    spot_price: {{ cookiecutter.spot_price }}
    wait_timeout: 1800
    ssh_user: ubuntu
    groups:
      - debian_family

  - name: test-aws-Debian9-{{ cookiecutter.role_name }}
    image: {{ cookiecutter.image_debian9 }}
    platform: debian9
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_linux == "true" %}
    volume_size: {{ cookiecutter.volume_size_linux }}
{% endif %}
    region: {{ cookiecutter.aws_region }}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    spot_price: {{ cookiecutter.spot_price }}
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: admin
    groups:
      - debian_family

  - name: test-aws-Amazon-{{ cookiecutter.role_name }}
    image: {{ cookiecutter.image_amazon }}
    platform: amazon
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_linux == "true" %}
    volume_size: {{ cookiecutter.volume_size_linux }}
{% endif %}
    region: {{ cookiecutter.aws_region }}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    spot_price: {{ cookiecutter.spot_price }}
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: ec2-user
    groups:
      - rhel_family

  - name: test-aws-Amazon2-{{ cookiecutter.role_name }}
    image: {{ cookiecutter.image_amazon2 }}
    platform: amazon2
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_linux == "true" %}
    volume_size: {{ cookiecutter.volume_size_linux }}
{% endif %}
    region: {{ cookiecutter.aws_region }}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    spot_price: {{ cookiecutter.spot_price }}
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: ec2-user
    groups:
      - rhel_family
{% endif -%}

{%- if cookiecutter.windows_tests == "true" %}
  - name: test-aws-Windows2016-{{ cookiecutter.role_name }}
    image_id: {{ cookiecutter.image_windows2016 }}
    platform: windows2016core
    region: {{ cookiecutter.aws_region }}
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_windows == "true" %}
    volume_size: {{ cookiecutter.volume_size_windows }}
{% endif %}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    spot_price: 0.14
    security_group_name:
      - default
    wait_timeout: 1800
    groups:
      - windows

  - name: test-aws-Windows2019-{{ cookiecutter.role_name }}
    image_id: {{ cookiecutter.image_windows2019 }}
    platform: windows2019core
    region: {{ cookiecutter.aws_region }}
    instance_type: {{ cookiecutter.instance_type }}
{% if cookiecutter.customize_vol_size_windows == "true" %}
    volume_size: {{ cookiecutter.volume_size_windows }}
{% endif %}
    vpc_subnet_id: {{ cookiecutter.vpc_subnet_id }}
    assign_public_ip: false
    spot_price: 0.14
    security_group_name:
      - default
    wait_timeout: 1800
    groups:
      - windows
{% endif -%}

{% raw -%}
provisioner:
  name: ansible
  log: true
  config_options:
    defaults:
      callback_whitelist: profile_tasks,timer
    ssh_connection:
      pipelining: true
  inventory:
    group_vars:
      windows:
        ansible_connection: winrm
        ansible_password: "{{ lookup('env', 'WINRM_ADMIN_PWD') | default('M0leCule123!', true) }}"
        ansible_winrm_transport: credssp
        ansible_winrm_server_cert_validation: ignore
{%- endraw %}
  playbooks:
    create: ../resources/provisioning/AWS/create.yml
    destroy: ../resources/provisioning/AWS/destroy.yml
    verify: ../resources/tests/verify.yml
scenario:
  name: cloud-aws-direct
verifier:
  name: {{ cookiecutter.verifier_name }}
